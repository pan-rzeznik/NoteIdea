<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:NoteIdea">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
            <ResourceDictionary Source="Fonts.xaml" />
        </ResourceDictionary.MergedDictionaries>

        <!-- Hoverless button -->
        <Style TargetType="{x:Type Button}" x:Key="Hoverless">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- System Icon Button -->
        <Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource Hoverless}">

            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="Padding" Value="10" />

        </Style>

        <!-- Window Control Button -->
        <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource BaseStyle}">
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="8" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="Foreground" Value="{StaticResource BasicWhiteTextColorBrush}" />

            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.5" />
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource LightPurpleTitleNameBrush}" />
                </Trigger>
            </Style.Triggers>

        </Style>

    <!-- Main menu button -->

    <Style TargetType="{x:Type Button}" x:Key="MainMenuButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="95" />
        <Setter Property="Opacity" Value="0.4"/>
        

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Main menu button ANIMATION -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource LightPurpleTitleNameBrush}" />
            </Trigger>
          
            <EventTrigger RoutedEvent="MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetProperty="Opacity" To="1" />
                            <ColorAnimation  To="#44327e" 
                                    Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                    Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            
            <EventTrigger RoutedEvent="MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" To="0.4" />
                            <ColorAnimation From="#44327e" 
                                    Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                    Duration="0:0:0.500"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
                
            </EventTrigger>
            
        </Style.Triggers>
        
        
    </Style>


    <!-- Window Close Button -->
        <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="{StaticResource DarkPurpleMenuBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Text Editor Button -->
    <Style TargetType="{x:Type Button}" x:Key="TextEditorButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Opacity" Value="0.4"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <!-- Text Editor Button ANIMATIONS -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
</ResourceDictionary>